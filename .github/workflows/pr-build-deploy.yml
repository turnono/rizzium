name: PR Build and Deploy

on:
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Install Firebase CLI
        run: npm install -g firebase-tools --legacy-peer-deps

      - name: List NX projects
        run: npx nx list

      - name: Build app
        run: |
          echo "Building rizzpos app..."
          npx nx build rizzpos --prod --verbose > build_output.log 2>&1
          BUILD_EXIT_CODE=$?
          echo "Build exit code: $BUILD_EXIT_CODE"
          echo "Full build output:"
          cat build_output.log
          if [ $BUILD_EXIT_CODE -ne 0 ]; then
            echo "rizzpos build failed with exit code $BUILD_EXIT_CODE"
            echo "Last 100 lines of build output:"
            tail -n 100 build_output.log
            exit 1
          fi

          echo "Building rizzpos-firebase..."
          npx nx build rizzpos-firebase --verbose

      - name: Configure Firebase project
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: |
          firebase use --add ${{ secrets.FIREBASE_PROJECT_ID }} --token $FIREBASE_TOKEN

      - name: Deploy to Firebase
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: |
          npx nx deploy rizzpos-firebase

      - name: Comment PR with deployment results
        uses: actions/github-script@v7
        if: always()
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const status = '${{ job.status }}';
            let comment = '## Deployment Status\n\n';
            comment += `rizzpos: ${status === 'success' ? '✅ Deployed' : '❌ Failed'}\n`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.name,
              body: comment
            })

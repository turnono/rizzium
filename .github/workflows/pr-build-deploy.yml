name: PR Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Cache
        uses: actions/cache@v4.1.2
        with:
          path: |
            ~/.npm
            node_modules
            .nx/cache
            dist
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.ts') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Install Firebase CLI
        run: npm install -g firebase-tools@13.16.0

      - name: Connect to Nx Cloud
        run: npx nx connect-to-nx-cloud

      - uses: nrwl/nx-set-shas@v4

      - name: Build rizzpos app
        run: |
          npx nx build rizzpos --prod

      # Build Firebase functions with better error handling
      - name: Build Firebase
        run: |
          echo "Building firebase project..."
          npx nx build rizzpos-firebase --verbose

          echo "Building functions..."
          npx nx build rizzpos-functions --verbose

      # Verify function builds
      - name: Verify function builds
        run: |
          if [ ! -d "dist/apps/rizzpos/functions" ]; then
            echo "functions build failed - output directory missing"
            exit 1
          fi

      # Configure Firebase with explicit project selection
      - name: Configure Firebase
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: |
          echo "Configuring Firebase project..."
          firebase use ${{ secrets.FIREBASE_PROJECT_ID }} --token $FIREBASE_TOKEN --non-interactive

      # Deploy to Firebase - simplified since direct deploy works
      - name: Deploy to Firebase
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: |
          echo "Deploying to Firebase..."
          firebase deploy --only hosting,functions --token "$FIREBASE_TOKEN" --project "${{ secrets.FIREBASE_PROJECT_ID }}"

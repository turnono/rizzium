rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Agent Activities Collection
    match /AgentActivities/{activityId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }

    // Agent Metrics Collection
    match /AgentMetrics/{agentId} {
      allow read: if isAuthenticated();
      allow write: if false;  // Only Cloud Functions can write
    }

    // Content Calendar Collection
    match /content-calendar/{documentId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }

    // Users Collection
    match /users/{userId} {
      allow read: if isAuthenticated() && isOwner(userId);
      allow write: if isAuthenticated() && isOwner(userId);

      match /usage/{document=**} {
        allow read: if isAuthenticated() && isOwner(userId);
        allow write: if false;  // Only Cloud Functions can write
      }
    }

    // Default deny for unmatched paths
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
